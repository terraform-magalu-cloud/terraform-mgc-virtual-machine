name: Notify Telegram on Release

on:
  release:
    types: [published]

jobs:
  notify-telegram:
    runs-on: ubuntu-latest
    steps:
      - name: Send message to Telegram
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          RELEASE_URL: ${{ github.event.release.html_url }}
          RELEASE_NAME: ${{ github.event.release.name }}
        run: |
          if [ -z $RELEASE_TAG ]; then
          cat << EOF > sendMsg.py
          import os
          import requests

          # Vari√°veis de ambiente
          BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")
          CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
          REPO = os.getenv("REPOSITORY")  # Formato: usuario/repositorio

          if not BOT_TOKEN or not CHAT_ID or not REPO:
              raise ValueError("As vari√°veis TELEGRAM_TOKEN, TELEGRAM_CHAT_ID e GITHUB_REPOSITORY precisam estar definidas.")

          # Pega a √∫ltima release via GitHub API
          gh_api_url = f"https://api.github.com/repos/{REPO}/releases/latest"
          gh_response = requests.get(gh_api_url)

          if gh_response.status_code != 200:
              raise Exception(f"Erro ao buscar release do GitHub: {gh_response.status_code}")

          release = gh_response.json()
          tag = release["tag_name"]
          name = release["name"]
          description = release.get("body", "(sem descri√ß√£o)")
          html_url = release["html_url"]

          # Mensagem estilizada
          MESSAGE = f"""üéâ *Nova Release Publicada!*

          üè∑Ô∏è *{name}* (`{tag}`)

          üìù {description}

          üîó [Ver no GitHub]({html_url})
          """

          # Envia para o Telegram
          url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
          payload = {
              "chat_id": CHAT_ID,
              "text": MESSAGE,
              "parse_mode": "Markdown",
              "disable_web_page_preview": False,
          }

          response = requests.post(url, data=payload)
          print("Status:", response.status_code)
          print("Resposta:", response.json())
          EOF

          python sendMsg.py
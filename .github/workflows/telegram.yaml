name: Notify Telegram on Release

on:
  release:
    types: [published]
  workflow_dispatch: # Permite execuÃ§Ã£o manual

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install requests

      - name: Create and run Telegram notification script
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          REPOSITORY: ${{ github.repository }}
          THREAD_ID: ${{ ENV.THREAD_ID }}
        run: |
          cat <<'EOF' > send_release_telegram.py
          # Enviar mensagem Markdown para o Telegram com informaÃ§Ãµes da release do GitHub

          import requests
          import re
          import os

          BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")
          CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
          REPO = os.getenv("REPOSITORY")  # Formato: usuario/repositorio
          THREAD_ID = os.getenv("THREAD_ID")

          # =======================
          # FUNÃ‡ÃƒO PARA ESCAPAR MARKDOWN
          # =======================
          def escape_markdown(text):
              """
              Escapa todos os caracteres especiais exigidos pelo Telegram MarkdownV2.
              """
              if not text:
                  return ""
              escape_chars = r'_*[]()~`>#+-=|{}.!'
              return re.sub(f'([{re.escape(escape_chars)}])', r'\\\1', text)

          # =======================
          # OBTÃ‰M A ÃšLTIMA RELEASE
          # =======================
          release_url = f"https://api.github.com/repos/{REPO}/releases/latest"
          response = requests.get(release_url)
          release = response.json()

          # =======================
          # EXTRAI DADOS
          # =======================
          tag = release.get("tag_name", "N/A")
          name = release.get("name", "")
          body = release.get("body", "Sem changelog.")
          url = release.get("html_url", "")
          body = escape_markdown(body[:1000])  # limita texto e escapa caracteres
          published = escape_markdown(release.get("published_at", "https://github.com"))
          published = published.replace("\\","")
          data = published.split("T")
          hora = data[1]
          data = data[0].split("-")
          print("Data: {}-{}-{} Ã s {}".format(data[2],data[1],data[0],hora))
          data = "{}-{}-{} Ã s {}".format(data[2],data[1],data[0],hora)
          published_at = "{}".format(data)

          # =======================
          # MENSAGEM MARKDOWN
          # =======================
          message = f"""
          ðŸš€ *Nova Release DisponÃ­vel*
          *RepositÃ³rio:* `{escape_markdown(REPO)}`
          *VersÃ£o:* `{escape_markdown(tag)}`
          *Publicado::* {escape_markdown(published_at)}
          ðŸ”— [Ver no GitHub]({escape_markdown(url)})

          ðŸ“œ *Changelog:*
          {body}
          """

          # =======================
          # ENVIA PARA O TELEGRAM
          # =======================
          telegram_url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
          payload = {
              "chat_id": CHAT_ID,
              "text": message,
              "parse_mode": "MarkdownV2",
              "message_thread_id": THREAD_ID
          }

          resp = requests.post(telegram_url, json=payload)
          if resp.status_code == 200:
              print("Mensagem enviada com sucesso!")
          else:
              print(f"Erro ao enviar mensagem: {resp.text}")
          EOF

          python send_release_telegram.py